#
# Acct Account Types
#
def cat(id, name, descr)
  params = { :id => id, :name => name, :description => desc }
  AcctCategory.create_or_upate(params);
end
def action(id, name, desc)
  params = { :id => id, :name => name, :description => desc }
  AcctAction.create_or_upate(params);
end
def accttype(id,name,desc)
  params = { :id => id, :name => name, :description => desc }
  AcctAccountType.create_or_upate(params);
end
def acct(id,name,type,descr)
  params = { :id => id, :name => name, :type => type, :description => descr}
  AcctAccount.create_or_update(params)
end

def add(acct, actions)
  acct.actions = actions
end

def seed
  t_asset     = accttype(1, "Asset",     "Asset Account")
  t_liability = accttype(2, "Liability", "Liability Account")
  t_income    = accttype(3, "Income",    "Income Account")
  t_expense   = accttype(4, "Expense"    "Expense Account")

  a_income       = acct(1,"General Income",   t_income,
                          "This account is to record general income.")
  a_expense      = acct(2, "General Expense", t_expense,
                           "This acocunt is to record general expenses.")
  a_eroom        = acct(3, "E-Room",          t_asset,
                           "This account holds the ammount in the box at the E-Room.")
  a_treasurer    = acct(4, "Treasurer",       t_asset,
                           "This account holds the ammount that the Treasurer has.")
  a_treaseroom   = acct(5, "TreasERoom",      t_asset,
                           "This account holds the money that the Treasuer has taken from the E-room.")
  a_checking     = acct(6, "Checking",        t_asset,
                           "This account holds what is currently in the checking account.")
  a_wva_income   = acct(7, "WVa Income",      t_income,
                           "This account records income from West Virgina.")
  a_wva_exspense = acct(8, "WVa Expense",     t_expense,
                           "This account records expense from West Virgina.")
  
  c_transfer        = cat( 1,"Transfer",       "Transfer between accounts")
  c_membership      = cat( 2,"Membership",     "Having to do with Membership money")
  c_reimbursement   = cat( 3,"Reimbursement",  "Having to do with Reimbursment to members")
  c_tshirts         = cat( 4,"Tshirts",        "Having to do with Tshirt sales and costs")
  c_supplies        = cat( 5,"Supplies",       "Having to do with general supplies")
  c_rentals         = cat( 6,"Rentals",        "Having to do with E-room rental gear")
  c_rental_deposits = cat( 7,"Rental Deposit", "Having to do with E-room deposits that must be left in box")
  c_gear            = cat( 8."Gear",           "Having to do with gear costs")
  c_gas             = cat( 9."Gas",            "Gas expense or reimbursement")
  c_cabin           = cat(10."Cabins",         "Having to do with Cabin expense")
  c_wva             = cat(11."West Virgina",   "Having to do with Spring Break costs")

  k_membership_collect = act(1,"Membership Collect",     c_membership, a_income)
  k_wva_collect        = act(2,"WVa Collection",         c_wva, a_wva_income)
  k_wva_reimbursement  = act(3,"WVa Gas Reimbursements", c_gas, a_wva_expense)
  k_wva_cabinexp       = act(4."WVa Cabin Expense",      c_cabin, a_wva_expense)

# Wrt E-room
  k_to_treas   = act(5,"To Treasurer",   c_transfer, a_treasurer)
  k_from_treas = act(6,"From Treasurer", c_transfer, a_treaseroom)

  add(a_eroom, [k_membership_collect,
                k_wva_collect,
                k_wva_reimbursement,
                k_wva_cabinexp,
                k_to_treas,
                k_from_treas])
# Wrt Tresurer
  k_to_eroom   = act(7,"To E-Room",   c_transfer, c_treaseroom)
  k_from_eroom = act(8,"From E-Room", c_transfer, a_treasurer)


  add( a_treasurer, [k_membership_collect,
                     k_wva_collect,
                     k_wva_reimbursement,
                     k_wva_cabinexp,
                     k_o_eroom,
                     k_from_eroom])